{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer } from \"./reducers/notesReducers\";\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { countryReducer } from \"./reducers/countryReducers\";\nconst reducer = combineReducers({\n  countryList: countryListReducer,\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  userUpdate: userUpdateReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/vincent/Desktop/Study/notezipper/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","noteCreateReducer","noteDeleteReducer","noteListReducer","noteUpdateReducer","userLoginReducer","userRegisterReducer","userUpdateReducer","countryReducer","reducer","countryList","countryListReducer","noteList","userLogin","userRegister","noteCreate","noteDelete","noteUpdate","userUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,iBAJF,QAKO,0BALP;AAMA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,iBAHF,QAIO,yBAJP;AAKA,SACEC,cADF,QAEO,4BAFP;AAIA,MAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC9Ba,EAAAA,WAAW,EAAEC,kBADiB;AAE9BC,EAAAA,QAAQ,EAAET,eAFoB;AAG9BU,EAAAA,SAAS,EAAER,gBAHmB;AAI9BS,EAAAA,YAAY,EAAER,mBAJgB;AAK9BS,EAAAA,UAAU,EAAEd,iBALkB;AAM9Be,EAAAA,UAAU,EAAEd,iBANkB;AAO9Be,EAAAA,UAAU,EAAEb,iBAPkB;AAQ9Bc,EAAAA,UAAU,EAAEX;AARkB,CAAD,CAA/B;AAWA,MAAMY,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBX,EAAAA,SAAS,EAAE;AAAEY,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAC3B,KAAD,CAAnB;AAEA,MAAM4B,KAAK,GAAG/B,WAAW,CACvBa,OADuB,EAEvBe,YAFuB,EAGvBxB,mBAAmB,CAACF,eAAe,CAAC,GAAG4B,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  noteCreateReducer,\n  noteDeleteReducer,\n  noteListReducer,\n  noteUpdateReducer,\n} from \"./reducers/notesReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  countryReducer\n} from \"./reducers/countryReducers\";\n\nconst reducer = combineReducers({\n  countryList: countryListReducer,\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  userUpdate: userUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}