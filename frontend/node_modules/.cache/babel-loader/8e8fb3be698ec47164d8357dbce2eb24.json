{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vincent/Desktop/Study/notezipper/frontend/src/screens/MyNotes/MyNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Accordion, Badge, Card } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { Button, TextField, Dialog, DialogActions, LinearProgress, DialogTitle, DialogContent, TableBody, Table, TableContainer, TableHead, TableRow, TableCell, Box } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport { listCountries } from \"../../actions/countryActions\";\n\nfunction MyNotes({\n  history,\n  search\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const noteList = useSelector(state => state.noteList);\n  const {\n    loading,\n    error,\n    notes,\n    countries\n  } = noteList; // const filteredNotes = notes.filter((note) =>\n  //   note.title.toLowerCase().includes(search.toLowerCase())\n  // );\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const noteDelete = useSelector(state => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = noteDelete;\n  const noteCreate = useSelector(state => state.noteCreate);\n  const {\n    success: successCreate\n  } = noteCreate;\n  const noteUpdate = useSelector(state => state.noteUpdate);\n  const {\n    success: successUpdate\n  } = noteUpdate;\n  useEffect(() => {\n    dispatch(listNotes());\n    dispatch(listCountries());\n\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [dispatch, history, userInfo, successDelete, successCreate, successUpdate]);\n\n  const deleteHandler = id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: `Welcome Back ${userInfo && userInfo.name}..`,\n    children: [console.log(notes), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), errorDelete && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      variant: \"danger\",\n      children: errorDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this), loadingDelete && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), notes && notes.filter(filteredNote => filteredNote.title.toLowerCase().includes(search.toLowerCase())).reverse().map(note => /*#__PURE__*/_jsxDEV(Accordion, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyNotes, \"0+T1O8sXS5MYgAhGr/zGeOdS5aI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = MyNotes;\nexport default MyNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"sources":["/Users/vincent/Desktop/Study/notezipper/frontend/src/screens/MyNotes/MyNotes.js"],"names":["React","useEffect","Accordion","Badge","Card","MainScreen","Link","ReactMarkdown","useDispatch","useSelector","deleteNoteAction","listNotes","Loading","ErrorMessage","Button","TextField","Dialog","DialogActions","LinearProgress","DialogTitle","DialogContent","TableBody","Table","TableContainer","TableHead","TableRow","TableCell","Box","Pagination","listCountries","MyNotes","history","search","dispatch","noteList","state","loading","error","notes","countries","userLogin","userInfo","noteDelete","loadingDelete","errorDelete","success","successDelete","noteCreate","successCreate","noteUpdate","successUpdate","push","deleteHandler","id","window","confirm","name","console","log","filter","filteredNote","title","toLowerCase","includes","reverse","map","note"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Accordion, Badge, Card } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport {\n  Button, TextField, Dialog, DialogActions, LinearProgress,\n  DialogTitle, DialogContent, TableBody, Table,\n  TableContainer, TableHead, TableRow, TableCell, Box\n} from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\n\nimport { listCountries } from \"../../actions/countryActions\";\n\nfunction MyNotes({ history, search }) {\n  const dispatch = useDispatch();\n\n  const noteList = useSelector((state) => state.noteList);\n  const { loading, error, notes , countries} = noteList;\n\n  // const filteredNotes = notes.filter((note) =>\n  //   note.title.toLowerCase().includes(search.toLowerCase())\n  // );\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = noteDelete;\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { success: successCreate } = noteCreate;\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { success: successUpdate } = noteUpdate;\n\n  useEffect(() => {\n    dispatch(listNotes());\n    dispatch(listCountries());\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    successUpdate,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  return (\n    <MainScreen title={`Welcome Back ${userInfo && userInfo.name}..`}>\n      {console.log(notes)}\n      {/* <Link to=\"/createnote\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Create new Note\n        </Button>\n      </Link> */}\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n      {errorDelete && (\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n      )}\n      {loading && <Loading />}\n      {loadingDelete && <Loading />}\n      <table>\n                <th>\n                \n                </th>\n              </table>\n      {notes &&\n        notes\n          .filter((filteredNote) =>\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\n          )\n          .reverse()\n          .map((note) => (\n            <Accordion>\n              \n            </Accordion>\n          ))}\n    </MainScreen>\n  );\n}\n\nexport default MyNotes;\n"]},"metadata":{},"sourceType":"module"}