{"version":3,"sources":["components/Footer.js","constants/userConstants.js","components/Header.js","actions/userActions.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","constants/countryConstants.js","screens/MyNotes/MyNotes.js","actions/countryActions.js","screens/SingleNote/SingleNote.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleNote/CreateNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/countryReducers.js","reducers/notesReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","Header","setSearch","dispatch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","value","NavDropdown","title","name","Item","Divider","onClick","a","localStorage","removeItem","Link","LandingPage","history","push","to","Button","size","MainScreen","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","config","headers","Authorization","token","axios","delete","data","payload","message","response","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","COUNTRY_LIST_REQUEST","COUNTRY_LIST_SUCCESS","COUNTRY_LIST_FAIL","MyNotes","search","countryList","loading","countries","error","noteDelete","successDelete","success","successCreate","noteCreate","successUpdate","noteUpdate","useState","openProductEditModal","setOpenProductEditModal","setCloseProductEditModal","setName","translations","setTranslations","console","log","get","listCountries","Dialog","open","onClose","aria-labelledby","aria-describedby","fullWidth","DialogTitle","DialogContent","TableContainer","Table","TableBody","Object","keys","map","language","translation","TableRow","TableCell","official","common","DialogActions","color","aria-label","TableHead","align","row","component","scope","src","flags","svg","capital","region","latlng","toFixed","area","population","maps","googleMaps","values","Pagination","SingleNote","match","setTitle","content","setContent","category","setCategory","date","setDate","loadingDelete","errorDelete","params","updatedAt","fetching","Card","Body","onSubmit","preventDefault","put","updateNoteAction","Group","controlId","Label","Control","as","rows","window","confirm","substring","LoginScreen","email","setEmail","password","setPassword","post","setItem","JSON","stringify","login","RegisterScreen","pic","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","register","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","CreateNote","note","resetHandler","createNoteAction","Date","toLocaleDateString","ProfileScreen","location","confirmPassword","userUpdate","md","user","varient","alt","App","s","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","noteList","notes","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ee56116.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        width: \"100%\",\n        position: \"relative\",\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; ZHUQING WANG</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {} from \"react-router-dom\";\nimport { logout } from \"../actions/userActions\";\n\nfunction Header({ setSearch }) {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  useEffect(() => {}, [userInfo]);\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"/\">Dashboard</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\">\n            {userInfo && (\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search country\"\n                  className=\"mr-sm-2\"\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n              </Form>\n            )}\n          </Nav>\n          <Nav>\n            {userInfo ? (\n              <>\n                {/* <Nav.Link href=\"/mynotes\">My Notes</Nav.Link> */}\n                <NavDropdown\n                  title={`${userInfo.name}`}\n                  id=\"collasible-nav-dropdown\"\n                >\n                  <NavDropdown.Item href=\"/profile\">\n                    {/* <img\n                      alt=\"\"\n                      src={`${userInfo.pic}`}\n                      width=\"25\"\n                      height=\"25\"\n                      style={{ marginRight: 10 }}\n                    /> */}\n                    My Profile\n                  </NavDropdown.Item>\n\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, pic, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./LandingStyles.css\";\n\nfunction LandingPage({ history }) {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history, userInfo]);\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <div className=\"intro-text\">\n            <div>\n              {/* <h1 className=\"title\">Welcome!</h1> */}\n              {/* <p className=\"subtitle\">New feature relaesed!</p> */}\n            </div>\n            <div className=\"buttonContainer\">\n              <Link to=\"/login\">\n                <Button size=\"lg\" className=\"landingbutton\">\n                  Login\n                </Button>\n              </Link>\n              <Link to=\"/register\">\n                <Button\n                  // variant=\"outline-primary\"\n                  size=\"lg\"\n                  className=\"landingbutton\"\n                >\n                  Signup\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport \"./Screen.css\";\n\nfunction MainScreen({ children, title }) {\n  return (\n    <div className=\"mainback\">\n      <Container>\n        <Row>\n          <div className=\"page\">\n            {title && (\n              <>\n                <h1 className=\"heading\">{title}</h1>\n                <hr />\n              </>\n            )}\n            {children}\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MainScreen;\n","export const NOTES_LIST_REQUEST = \"NOTES_LIST_REQUEST\";\nexport const NOTES_LIST_SUCCESS = \"NOTES_LIST_SUCCESS\";\nexport const NOTES_LIST_FAIL = \"NOTES_LIST_FAIL\";\n\nexport const NOTES_CREATE_REQUEST = \"NOTES_CREATE_REQUEST\";\nexport const NOTES_CREATE_SUCCESS = \"NOTES_CREATE_SUCCESS\";\nexport const NOTES_CREATE_FAIL = \"NOTES_CREATE_FAIL\";\n\nexport const NOTES_UPDATE_REQUEST = \"NOTES_UPDATE_REQUEST\";\nexport const NOTES_UPDATE_SUCCESS = \"NOTES_UPDATE_SUCCESS\";\nexport const NOTES_UPDATE_FAIL = \"NOTES_UPDATE_FAIL\";\n\nexport const NOTES_DELETE_REQUEST = \"NOTES_DELETE_REQUEST\";\nexport const NOTES_DELETE_SUCCESS = \"NOTES_DELETE_SUCCESS\";\nexport const NOTES_DELETE_FAIL = \"NOTES_DELETE_FAIL\";\n","import {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from \"../constants/notesConstants\";\nimport axios from \"axios\";\n\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/notes`, config);\n\n    dispatch({\n      type: NOTES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createNoteAction = (title, content, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: NOTES_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/notes/create`,\n      { title, content, category },\n      config\n    );\n\n    dispatch({\n      type: NOTES_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\n\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateNoteAction = (id, title, content, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: NOTES_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/notes/${id}`,\n      { title, content, category },\n      config\n    );\n\n    dispatch({\n      type: NOTES_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Loading({ size = 100 }) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <Spinner\n        style={{\n          width: size,\n          height: size,\n        }}\n        animation=\"border\"\n      />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","export const COUNTRY_LIST_REQUEST = \"COUNTRY_LIST_REQUEST\";\nexport const COUNTRY_LIST_SUCCESS = \"COUNTRY_LIST_SUCCESS\";\nexport const COUNTRY_LIST_FAIL = \"COUNTRY_LIST_FAIL\";","import React, { useEffect, useState } from \"react\";\nimport { Accordion, Badge, Card } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport {\n  Button, TextField, Dialog, DialogActions, LinearProgress,\n  DialogTitle, DialogContent, TableBody, Table,\n  TableContainer, TableHead, TableRow, TableCell, Box\n} from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\n\nimport { listCountries } from \"../../actions/countryActions\";\n\nfunction MyNotes({ history, search }) {\n  const dispatch = useDispatch();\n\n  // const noteList = useSelector((state) => state.noteList);\n  const countryList = useSelector((state) => state.countryList);\n  // const { loading, error, notes , countries} = noteList;\n  const { loading, error , countries} = countryList;\n\n  // const filteredNotes = notes.filter((note) =>\n  //   note.title.toLowerCase().includes(search.toLowerCase())\n  // );\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = noteDelete;\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { success: successCreate } = noteCreate;\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { success: successUpdate } = noteUpdate;\n\n  const [openProductEditModal, setOpenProductEditModal, closeProductEditModal, setCloseProductEditModal] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [translations, setTranslations] = useState({});\n\n  useEffect(() => {\n    dispatch(listCountries(search));\n    // dispatch(listCountries(name));\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    successUpdate,\n    name\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  const handleProductEditOpen = (data) => {\n    setOpenProductEditModal(true);\n    setName(data.name);\n    setTranslations(data);\n  };\n\n  const handleProductClose = () => {\n    // this.setState({ openProductModal: false });\n    setCloseProductEditModal(true);\n  };\n\n  const handleProductEditClose = () => {\n    // this.setState({ openProductEditModal: false });\n    setOpenProductEditModal(false);\n  };\n\n\n  return (\n    <MainScreen>\n      {console.log(\"get: \", countries)}\n      {/* <Link to=\"/createnote\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Create new Note\n        </Button>\n      </Link> */}\n      {/* {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>} */}\n      {/* {errorDelete && (\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n      )} */}\n      {loading && <Loading />}\n      {/* {loadingDelete && <Loading />} */}\n\n        <Dialog\n          open={openProductEditModal}\n          onClose={handleProductClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          fullWidth\n        >\n          <DialogTitle id=\"alert-dialog-title\">Translation details</DialogTitle>\n          <DialogContent>\n            <TableContainer>\n            <Table>\n              <TableBody>\n              {Object.keys(translations).map((language) => {\n                const translation = translations[language];\n                console.log(translation);\n                return (\n                  <TableRow key={language}>\n                    <TableCell>{language}</TableCell>\n                    <TableCell>{translation.official}</TableCell>\n                    <TableCell>{translation.common}</TableCell>\n                  </TableRow>\n                );\n              })}\n\n              </TableBody>\n            </Table>\n      </TableContainer>\n            \n          </DialogContent>\n\n          <DialogActions>\n            <Button onClick={handleProductEditClose} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n    {<TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Flag</TableCell>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Captical</TableCell>\n              <TableCell align=\"center\">Region</TableCell>\n              {/* <TableCell align=\"center\">Currency</TableCell> */}\n              <TableCell align=\"center\">Coordinate</TableCell>\n              <TableCell align=\"center\">Area</TableCell>\n              <TableCell align=\"center\">Population</TableCell>\n              <TableCell align=\"center\">Map Link</TableCell>\n              <TableCell align=\"center\">Translations</TableCell>\n              {/* <TableCell align=\"center\">Action</TableCell> */}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {countries && countries.map((row) => (\n            \n              <TableRow key={row.name.common}>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <img src={row.flags.svg} width=\"50\" height=\"30\" />\n                </TableCell>\n                <TableCell align=\"center\">{row.name.common}</TableCell>\n                <TableCell align=\"center\">{row.capital}</TableCell>\n                <TableCell align=\"center\">{row.region}</TableCell>\n                {/* <TableCell align=\"center\">{Object.keys(currencies).map(k=>k)}</TableCell> */}\n                <TableCell align=\"center\">{row.latlng[0].toFixed(2)+\", \"+row.latlng[1].toFixed(2)}</TableCell>\n                <TableCell align=\"center\">{row.area.toFixed(2)}</TableCell>\n                <TableCell align=\"center\">{row.population}</TableCell>\n                <TableCell align=\"center\"><a href={row.maps.googleMaps} target=\"_blank\">{row.maps.googleMaps}</a></TableCell>\n                <TableCell align=\"center\">\n                  <Button\n                    className=\"button_style\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={(e) => handleProductEditOpen(Object.values(row.translations))}\n                  >\n                    Details\n                </Button>\n                {/* <Button\n                    className=\"button_style\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={(e) => this.deleteProduct(row._id)}\n                  >\n                    Delete\n                </Button> */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <br />\n        <Pagination \n        component=\"div\"\n        // count={this.state.pages} \n        // page={this.state.page} \n        // onChange={this.pageChange} \n        // rowsPerPage={this.state.rowsPerPage}\n        // onRowsPerPageChange={this.handleChangeRowsPerPage} \n        color=\"primary\" />\n      </TableContainer>}\n    </MainScreen>\n  );\n}\n\nexport default MyNotes;\n","import {\n    COUNTRY_LIST_FAIL,\n    COUNTRY_LIST_REQUEST,\n    COUNTRY_LIST_SUCCESS,\n  } from \"../constants/countryConstants\";\n  import axios from \"axios\";\n  \n  export const listCountries = (name) => async (dispatch, getState) => {\n    console.log(\"search: \", name);\n    try {\n      dispatch({\n        type: COUNTRY_LIST_REQUEST,\n      });\n  \n      const {\n        userLogin: { userInfo },\n      } = getState();\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n  \n      const { data } = await axios.get(`https://restcountries.com/v3.1/name/${name}`, config);\n      \n      console.log(data);\n      dispatch({\n        type: COUNTRY_LIST_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: COUNTRY_LIST_FAIL,\n        payload: message,\n      });\n    }\n  };","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction SingleNote({ match, history }) {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { loading, error } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n    history.push(\"/mynotes\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateNoteAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n\n  return (\n    <MainScreen title=\"Edit Note\">\n      <Card>\n        <Card.Header>Edit your Note</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                placeholder=\"Enter the title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the content\"\n                rows={4}\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Note Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                placeholder=\"Enter the Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update Note\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete Note\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default SingleNote;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { login } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./LoginScreen.css\";\n\nfunction LoginScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <MainScreen title=\"LOGIN\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            New Customer ? <Link to=\"/register\">Register Here</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { register } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./RegisterScreen.css\";\n\nfunction RegisterScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else dispatch(register(name, email, password, pic));\n  };\n\n  return (\n    <MainScreen title=\"REGISTER\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={confirmpassword}\n              placeholder=\"Confirm Password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          {picMessage && (\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n          )}\n          <Form.Group controlId=\"pic\">\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.File\n              onChange={(e) => postDetails(e.target.files[0])}\n              id=\"custom-file\"\n              type=\"image/png\"\n              label=\"Upload Profile Picture\"\n              custom\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Register\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            Have an Account ? <Link to=\"/login\">Login</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default RegisterScreen;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction CreateNote({ history }) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { loading, error, note } = noteCreate;\n\n  console.log(note);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createNoteAction(title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create a Note\">\n      <Card>\n        <Card.Header>Create a new Note</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={title}\n                placeholder=\"Enter the title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Note Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the Category\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Note\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Feilds\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Creating on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateNote;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name, email, password, pic }));\n  };\n\n  return (\n    <MainScreen title=\"EDIT PROFILE\">\n      <div>\n        <Row className=\"profileContainer\">\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              {loading && <Loading />}\n              {success && (\n                <ErrorMessage variant=\"success\">\n                  Updated Successfully\n                </ErrorMessage>\n              )}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>{\" \"}\n              {picMessage && (\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n              )}\n              <Form.Group controlId=\"pic\">\n                <Form.Label>Change Profile Picture</Form.Label>\n                <Form.File\n                  onChange={(e) => postDetails(e.target.files[0])}\n                  id=\"custom-file\"\n                  type=\"image/png\"\n                  label=\"Upload Profile Picture\"\n                  custom\n                />\n              </Form.Group>\n              <Button type=\"submit\" varient=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img src={pic} alt={name} className=\"profilePic\" />\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default ProfileScreen;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport MyNotes from \"./screens/MyNotes/MyNotes\";\nimport SingleNote from \"./screens/SingleNote/SingleNote\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateNote from \"./screens/SingleNote/CreateNote\";\nimport { useState } from \"react\";\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\n\n// import MyCountries from \"./screens/CountryScreen/MyCountries\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <Router>\n      <Header setSearch={(s) => setSearch(s)} />\n      <main className=\"App\">\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route\n          path=\"/mynotes\"\n          component={({ history }) => (\n            <MyNotes search={search} history={history} />\n          )}\n        />\n        <Route path=\"/note/:id\" component={SingleNote} />\n        <Route path=\"/createnote\" component={CreateNote} />;\n        <Route path=\"/profile\" component={ProfileScreen} />\n        {/* <Route path=\"/country\" component={MyCountries} /> */}\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  noteCreateReducer,\n  noteDeleteReducer,\n  noteListReducer,\n  noteUpdateReducer,\n} from \"./reducers/notesReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  countryListReducer\n} from \"./reducers/countryReducers\";\n\nconst reducer = combineReducers({\n  countryList: countryListReducer,\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  userUpdate: userUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  COUNTRY_LIST_FAIL,\n  COUNTRY_LIST_REQUEST,\n  COUNTRY_LIST_SUCCESS,\n} from \"../constants/countryConstants\";\n\nexport const countryListReducer = (state = { countries: [] }, action) => {\n  switch (action.type) {\n    case COUNTRY_LIST_REQUEST:\n      return { loading: true, countries: [] };\n    case COUNTRY_LIST_SUCCESS:\n      return { loading: false, countries: action.payload };\n    case COUNTRY_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};","import {\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n} from \"../constants/notesConstants\";\n\nexport const noteListReducer = (state = { notes: [] }, action) => {\n  switch (action.type) {\n    case NOTES_LIST_REQUEST:\n      return { loading: true };\n    case NOTES_LIST_SUCCESS:\n      return { loading: false, notes: action.payload };\n    case NOTES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_CREATE_REQUEST:\n      return { loading: true };\n    case NOTES_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_DELETE_REQUEST:\n      return { loading: true };\n    case NOTES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_UPDATE_REQUEST:\n      return { loading: true };\n    case NOTES_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}